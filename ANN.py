# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PaIQ_j1whBPtdlprolPZ15zvAbXaZ0TW

### ANN IMPLEMENTATION
"""

import numpy as np
import pandas as pd
import tensorflow as tf

"""## Version Check"""

tf.__version__

"""## Part 1 - Data Preprocessing

### Importing Dataset & Choosing Data Part
"""

dataset =pd.read_excel('Folds5x2_pp.xlsx')
X = dataset.iloc[:,:-1].values
y = dataset.iloc[:,-1:].values

"""### Splitting Dataset into Train Data & Test Data"""

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(x,y,test_size=0.2, random_state=0)

"""## Part 2 - Building the ANN With 6 Neurons & 2 Layers

### Initializing the ANN
"""

ann =tf.keras.models.Sequential()

"""### Adding input layer and the First Hidden Layer"""

ann.add(tf.keras.layers.Dense(units=6,activation='relu'))

"""### Adding Second Hidden Layer"""

ann.add(tf.keras.layers.Dense(units=6, activation='relu'))

"""### Adding Output Layer"""

ann.add(tf.keras.layers.Dense(units=1))

ann.compile(optimizer ='adam',loss ='mean_squared_error')

ann.fit(X_train,y_train,batch_size= 32, epochs=100)

y_pred =ann.predict(X_test)
np.set_printoptions(precision=2)
print(np.concatenate((y_pred.reshape(len(y_pred),1),y_test.reshape(len(y_test),1)),1))